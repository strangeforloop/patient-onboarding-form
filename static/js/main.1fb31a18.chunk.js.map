{"version":3,"sources":["formPages/Demographic.js","components/Filter.js","formPages/Conditions.js","formPages/MedicalQuestions.js","formPages/TermsAndConditions.js","formPages/Review.js","components/MultiStepForm.js","App.js","reportWebVitals.js","index.js"],"names":["Demographic","formData","setFormData","navigation","name","birthdate","email","address","phoneNumber","Box","align","responsive","pad","left","right","margin","top","bottom","background","Heading","level","width","FormField","label","TextInput","size","placeholder","value","onChange","DateInput","format","Date","toISOString","fill","flex","direction","justify","Button","primary","onClick","next","Filter","props","useState","checked","setChecked","height","alignContent","wrap","gap","map","type","CheckBox","indexOf","currentIndex","newChecked","push","splice","handleFilters","handleToggle","border","color","Conditions","originalFiltersList","highBloodPressure","cardiacArrest","arrhythmia","coronaryHeartDisease","ibs","crohnsDisease","gallstones","depression","anxiety","stress","insomnia","cancer","diabetes","filters","setFilters","conditions","condition","str","replace","a","toUpperCase","b","toLowerCase","conditionsList","setConditionsList","useEffect","console","log","handleCheck","e","target","index","findIndex","newConditionsList","length","filter","secondary","previous","MedicalQuestions","tobacco","medications","TermsAndConditions","RenderAccordion","summary","go","details","Accordion","AccordionPanel","data","key","Object","keys","Review","iBS","smokeTobacco","transformBooleanToYesNo","defaultData","example","steps","id","MultiStepForm","useForm","useStep","initialStep","step","theme","global","colors","brand","font","family","Grommet","App","full","ResponsiveContext","Consumer","Header","tag","icon","Grow","FormNext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fb31a18.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Button, DateInput, Heading, FormField, TextInput } from 'grommet';\n\nconst Demographic = ({ formData, setFormData, navigation }) => {\n  const {name, birthdate, email, address, phoneNumber} = formData;\n\n  return (\n    <Box\n      align=\"center\"\n      responsive={true}\n      pad={{left: \"xlarge\", right: \"xlarge\"}}\n      margin={{left: \"xlarge\", right: \"xlarge\", top: \"medium\", bottom: \"medium\"}}\n      background=\"light-2\"\n    >\n      <Heading level={2}>Demographic</Heading>\n      <Box width=\"medium\">\n        <FormField label=\"Full Name\">\n          <TextInput\n            size=\"small\"\n            name=\"name\"\n            placeholder=\"Jane Doe\"\n            value={name}\n            onChange={setFormData}\n          />\n        </FormField>\n        <FormField label=\"Birthdate\">\n          <DateInput\n            format=\"mm/dd/yyyy\"\n            value={(new Date()).toISOString()}\n            name=\"birthdate\"\n            placeholder=\"mm/dd/yyyy\"\n            value={birthdate}\n            onChange={setFormData}\n          />\n        </FormField>\n        <FormField label=\"Email Address\">\n          <TextInput\n            name=\"email\"\n            placeholder=\"janedoe@domain.com\"\n            value={email}\n            onChange={setFormData}\n          />\n        </FormField>\n        <FormField label=\"Address\">\n          <TextInput\n            name=\"address\"\n            placeholder=\"123 Happy Ln.\"\n            value={address}\n            onChange={setFormData}\n          />\n        </FormField>\n        <FormField label=\"Phone Number\">\n          <TextInput\n            name=\"phoneNumber\"\n            placeholder=\"(xxx) xxx-xxxx\"\n            value={phoneNumber}\n            onChange={setFormData}\n          />\n        </FormField>\n        <Box\n          fill={false}\n          flex\n          direction=\"row\"\n          justify=\"end\"\n        >\n          <Button\n            fill={false}\n            margin={{ top: 'medium', bottom: 'medium'}}\n            primary label=\"next\"\n            onClick={() => navigation.next()}\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Demographic;\n","import React, { useState } from 'react'\nimport { Box, CheckBox } from 'grommet';\n\nconst Filter = (props) => {\n  const [checked, setChecked] = useState([]);\n\n  const handleToggle = (type) => {\n    const currentIndex = checked.indexOf(type);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(type);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    props.handleFilters(newChecked);\n  };\n\n  const RenderCheckBoxes = () => {\n    const types = ['Cardiovascular', 'Gastrointestinal', 'Psychological', 'Other'];\n\n    return (\n      <Box height=\"xsmall\" justify=\"center\" flex alignContent=\"between\" wrap={true} direction=\"row\" gap=\"small\">\n        {\n          types.map(type => {\n            return (\n              <CheckBox\n                key={type}\n                checked={checked.indexOf(type) === -1 ? false : true}\n                label={type}\n                onChange={() => { handleToggle(type) }}\n                border={{ color: 'brand', size: 'small'}}\n              />\n            )\n          })\n        }\n      </Box>\n    );\n  };\n\n  return (\n    <div>\n      {RenderCheckBoxes()}\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\nimport Filter from '../components/Filter';\nimport { Box, Button, CheckBox, Heading } from 'grommet';\nimport conditions from './conditions.json';\n\nconst Conditions = ({ formData, setFormData, navigation }) => {\n  const { highBloodPressure, cardiacArrest, arrhythmia, coronaryHeartDisease,\n    ibs, crohnsDisease, gallstones, depression, anxiety, stress,\n    insomnia, cancer, diabetes } = formData;\n\n  const camelCase = (str) => {\n    return str\n      .replace(/\\s(.)/g, function(a) {\n          return a.toUpperCase();\n      })\n      .replace(/\\s/g, '')\n      .replace(/^(.)/, function(b) {\n          return b.toLowerCase();\n      });\n  }\n  const originalFiltersList = ['Cardiovascular', 'Gastrointestinal', 'Psychological', 'Other'];\n  const [filters, setFilters] = useState(originalFiltersList);\n  const [conditionsList, setConditionsList] = useState(conditions.map(condition => {\n    return {\n      ...condition,\n      name: camelCase(condition.condition),\n      checked: false\n    };\n  }));\n\n  const isCardiovascular = (condition) => { return condition.type === 'cardiovascular' };\n  const isGastrointestinal = (condition) =>  { return condition.type === 'gastrointestinal' };\n  const isPsychological = (condition) =>  { return condition.type === 'psychological' };\n  const isOther = (condition) =>  { return condition.type === 'other' };\n\n  useEffect(() => {\n    console.log('conditionsList changed');\n    console.log({conditionsList});\n  }, [conditionsList]);\n\n  const handleFilters = (filters) => {\n    if (filters.length === 0) {\n      setFilters(originalFiltersList);\n    } else {\n      setFilters(filters);\n    }\n  };\n\n  const handleCheck = (e) => {\n    console.log(e.target);\n    console.log(e.target.checked);\n    setFormData(e);\n    const index = conditionsList.findIndex(condition => condition.name === e.target.name);\n    const newConditionsList = [...conditionsList];\n    newConditionsList[index].checked = e.target.checked;\n    setConditionsList(newConditionsList);\n  };\n\n  return (\n    <Box\n      fill=\"vertical\"\n      align=\"center\"\n      responsive={true}\n      pad={{left: \"xlarge\", right: \"xlarge\"}}\n      margin={{left: \"xlarge\", right: \"xlarge\", top: \"medium\", bottom: \"medium\"}}\n      background=\"light-2\"\n    >\n      <Heading level={2}>Conditions</Heading>\n      <Heading margin={{top: 'none'}} level={4}>Select all conditions that apply.</Heading>\n      <Heading margin={{top: 'small', bottom: 'none'}} level={6}>Filter by category</Heading>\n\n      <Box align=\"start\" width=\"medium\" margin={{top: 'small', bottom: 'small'}}>\n        <Box fill=\"horizontal\">\n          <Filter\n            handleFilters={filters => handleFilters(filters)}\n          />\n        </Box>\n\n        { filters.map(filter => {\n          return (\n            <div>\n              <Heading level={4}>{filter}</Heading>\n              {\n                conditionsList.filter(condition => {\n                  return condition.type === filter.toLowerCase();\n                }).map((condition, index) => {\n                  return (\n                    <Box margin={{bottom: 'xsmall'}}>\n                      <CheckBox\n                        key={index}\n                        label={condition.condition}\n                        checked={condition.checked}\n                        name={condition.name}\n                        onChange={handleCheck}\n                      >\n                      </CheckBox>\n                    </Box>\n                    )\n                })\n              }\n            </div>\n          )\n        }) }\n        <Box margin={{top: 'medium'}} fill flex direction=\"row\" justify=\"between\">\n          <Button\n            fill={false}\n            secondary label=\"back\"\n            onClick={() => {navigation.previous()}}\n          />\n          <Button\n            fill={false}\n            primary label=\"next\"\n            onClick={() => {navigation.next()}}\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Conditions;\n","import React from 'react';\nimport { Box, Button, FormField, Heading, TextInput } from 'grommet';\n\nconst MedicalQuestions = ({ formData, setFormData, navigation }) => {\n  const {tobacco, medications} = formData;\n\n  return (\n    <Box\n      align=\"center\"\n      responsive={true}\n      pad={{left: \"xlarge\", right: \"xlarge\"}}\n      margin={{left: \"xlarge\", right: \"xlarge\", top: \"medium\", bottom: \"medium\"}}\n      background=\"light-2\"\n    >\n      <Heading level={2}>Medical Questions</Heading>\n      <Heading margin={{top: 'none'}} level={4}>\n        Answer a few questions about your medical history.\n      </Heading>\n      <Box width=\"medium\" align=\"start\" margin={{top: 'small', bottom: 'small'}}>\n        <FormField margin={{bottom: 'medium'}} fill label=\"Do you smoke any tobacco products?\">\n          <TextInput\n            name=\"smokeTobacco\"\n            placeholder=\"How much and how often?\"\n            value={tobacco}\n            onChange={setFormData}\n          />\n        </FormField>\n        <FormField fill label=\"Current medications\">\n          <TextInput\n            name=\"medications\"\n            placeholder=\"Please list any medications, supplements, or vitamins.\"\n            value={medications}\n            onChange={setFormData}\n          />\n        </FormField>\n        <Box margin={{top: 'medium'}} fill flex direction=\"row\" justify=\"between\">\n          <Button\n            fill={false}\n            secondary label=\"back\"\n            onClick={() => {navigation.previous()}}\n          />\n          <Button\n            fill={false}\n            primary label=\"next\"\n            onClick={() => {navigation.next()}}\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default MedicalQuestions;\n","import React from 'react';\nimport { Box, Button, Heading, CheckBox } from 'grommet';\n\nconst TermsAndConditions = ({ formData, setFormData, navigation }) => {\n  return (\n    <Box\n      fill=\"vertical\"\n      responsive={true}\n      pad={{left: \"xlarge\", right: \"xlarge\"}}\n      margin={{left: \"xlarge\", right: \"xlarge\", top: \"medium\", bottom: \"medium\"}}\n      background=\"light-2\"\n    >\n    <Heading level={2}>Terms & Conditions</Heading>\n      <Box margin={{top: 'small', bottom: 'small'}}>\n        <p>Nullam quis risus eget urna mollis ornare vel eu leo. Aenean lacinia bibendum nulla sed consectetur. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Etiam porta sem malesuada magna mollis euismod. Maecenas sed diam eget risus varius blandit sit amet non magna.\n          <br/><br/>\n          Etiam porta sem malesuada magna mollis euismod. Nullam quis risus eget urna mollis ornare vel eu leo. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Vestibulum id ligula porta felis euismod semper. Donec ullamcorper nulla non metus auctor fringilla.\n        </p>\n        <CheckBox\n          label=\"I agree\"\n        />\n        <Box margin={{top: 'medium'}} fill flex direction=\"row\" justify=\"between\">\n          <Button\n            fill={false}\n            secondary label=\"back\"\n            onClick={() => {navigation.previous()}}\n          />\n          <Button\n            fill={false}\n            primary label=\"next\"\n            onClick={() => {navigation.next()}}\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default TermsAndConditions;\n","import React from 'react';\nimport { Accordion, AccordionPanel, Box, Button, Heading } from \"grommet\";\n\nconst Review = ({ formData, navigation }) => {\n  const { go } = navigation;\n\n  const {\n    name,\n    birthdate,\n    email,\n    address,\n    phoneNumber,\n    highBloodPressure,\n    cardiacArrest,\n    arrhythmia,\n    coronaryHeartDisease,\n    iBS,\n    crohnsDisease,\n    gallstones,\n    depression,\n    anxiety,\n    stress,\n    insomnia,\n    cancer,\n    diabetes,\n    smokeTobacco,\n    medications\n  } = formData;\n\n  const transformBooleanToYesNo = (condition) => {\n    return condition ? 'yes' : 'no';\n  };\n\n  return (\n    <Box\n      responsive={true}\n      pad={{left: \"xlarge\", right: \"xlarge\"}}\n      margin={{left: \"xlarge\", right: \"xlarge\", top: \"medium\", bottom: \"medium\"}}\n      border=\"all\"\n    >\n    <Heading level={2}>Review</Heading>\n      <Box margin={{bottom: 'medium'}}>\n        <RenderAccordion summary=\"Demographic\" go={go} details={[\n            { 'Full Name': name },\n            { 'Birth Data': birthdate },\n            { 'Email': email },\n            { 'Address': address },\n            { 'Phone Number': phoneNumber }\n        ]}/>\n        <RenderAccordion summary=\"Conditions\" go={go} details={[\n            { 'High Blood Pressure': transformBooleanToYesNo(highBloodPressure) },\n            { 'Cardiac Arrest': transformBooleanToYesNo(cardiacArrest) },\n            { 'Arrhythmia': transformBooleanToYesNo(arrhythmia) },\n            { 'Coronary Heart Disease': transformBooleanToYesNo(coronaryHeartDisease) },\n            { 'Irritable Bowel Syndrome': transformBooleanToYesNo(iBS) },\n            { 'Crohn\\'s Disease': transformBooleanToYesNo(crohnsDisease) },\n            { 'Gallstones': transformBooleanToYesNo(gallstones) },\n            { 'Depression': transformBooleanToYesNo(depression) },\n            { 'Anxiety': transformBooleanToYesNo(anxiety) },\n            { 'Stress': transformBooleanToYesNo(stress) },\n            { 'Insomnia': transformBooleanToYesNo(insomnia) },\n            { 'Cancer': transformBooleanToYesNo(cancer) },\n            { 'Diabetes': transformBooleanToYesNo(diabetes) },\n        ]}/>\n        <RenderAccordion summary=\"Medical Questions\" go={go} details={[\n            { 'Tobacco Usage': smokeTobacco },\n            { 'Medications': medications }\n        ]}/>\n      </Box>\n    </Box>\n  );\n};\n\nexport const RenderAccordion = ({ summary, go, details }) => (\n  <Accordion>\n    <AccordionPanel label={summary}>\n      <Box pad=\"medium\" background=\"light-2\">\n        <div>\n          { details.map((data, index) => {\n            console.log({details});\n            const key = Object.keys(data);\n            const value = data[key];\n            return <p key={index}>{`${key}: ${value}`}</p>\n          })}\n          <Button\n            primary\n            label=\"edit\"\n            onClick={() => go(`${summary}`)}\n          />\n        </div>\n      </Box>\n    </AccordionPanel>\n  </Accordion>\n);\n\nexport default Review;\n","import React from 'react';\nimport { useForm, useStep } from 'react-hooks-helper';\nimport Demographic from '../formPages/Demographic';\nimport Conditions from '../formPages/Conditions';\nimport MedicalQuestions from '../formPages/MedicalQuestions';\nimport TermsAndConditions from '../formPages/TermsAndConditions';\nimport Review from '../formPages/Review';\n\nconst defaultData = {\n  name: '',\n  birthdate: '',\n  email: '',\n  address: '',\n  phoneNumber: '',\n  example: false,\n  highBloodPressure: false,\n  cardiacArrest: false,\n  arrhythmia: false,\n  coronaryHeartDisease: false,\n  iBS: false,\n  crohnsDisease: false,\n  gallstones: false,\n  depression: false,\n  anxiety: false,\n  stress: false,\n  insomnia: false,\n  cancer: false,\n  diabetes: false,\n  smokeTobacco: '',\n  medications: '',\n};\n\nconst steps = [\n  {id: 'Demographic'},\n  {id: 'Conditions'},\n  {id: 'Medical Questions'},\n  {id: 'Terms & Conditions'},\n  {id: 'Review'},\n];\n\nconst MultiStepForm = () => {\n  const [formData, setFormData] = useForm(defaultData);\n\n  const {step, navigation} = useStep({\n    steps,\n    initialStep: 0\n  });\n\n  const props = { formData, setFormData, navigation };\n\n  switch (step.id) {\n    case 'Demographic':\n      return <Demographic {...props}/>\n    case 'Conditions':\n      return <Conditions {...props}/>\n    case 'Medical Questions':\n      return <MedicalQuestions {...props}/>\n    case 'Terms & Conditions':\n      return <TermsAndConditions {...props}/>\n    case 'Review':\n      return <Review {...props}/>\n    }\n};\n\nexport default MultiStepForm;\n","import MultiStepForm from './components/MultiStepForm';\nimport { Box, Button, Grommet, Header, Heading, ResponsiveContext } from 'grommet';\nimport { FormNext, Grow } from 'grommet-icons';\n\nconst theme = {\n  global: {\n    colors : {\n      brand: '#4F7F71',\n    },\n    font: {\n      family: 'Roboto',\n      size: '14px',\n      height: '20px',\n      color: '#333333'\n    },\n  },\n};\n\nconst App = () => {\n  return (\n    <Grommet theme={theme} full>\n      <ResponsiveContext.Consumer>\n        {size => (\n          <Box>\n          <Header\n            responsive\n            tag=\"header\"\n            background=\"brand\"\n            pad={{left: \"xlarge\", right: \"xlarge\"}}\n            gap=\"none\"\n          >\n            <Box\n              responsive\n              flex\n              direction=\"row\"\n              align=\"center\"\n              justify=\"start\" margin={{left: \"xlarge\", right: \"xlarge\", top: \"none\"}}\n            >\n              <Heading level='3'>\n                <Box align=\"center\" flex direction=\"row\">\n                  {/* <Box> */}\n                    <Button icon={<Grow />}/>\n                    Parsley Health\n                  {/* </Box> */}\n                  <Button icon={<FormNext />} />\n                </Box>\n              </Heading>\n              <Heading level='4' margin='none'>Patient Onboarding</Heading>\n            </Box>\n          </Header>\n            <Box margin={{left: \"xlarge\", right: \"xlarge\"}}>\n              <MultiStepForm />\n            </Box>\n          </Box>\n      )}\n    </ResponsiveContext.Consumer>\n  </Grommet>\n  );\n}\n\n<Grommet theme={theme}></Grommet>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}